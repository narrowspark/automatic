name: "Continuous Integration on Linux"

on:
  push:
    paths:
      - "**.php"
      - "composer.json"
  pull_request:
    paths:
      - "**.php"
      - "composer.json"

jobs:
  LinuxIntegration:
    name: "PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }} OS with ${{ matrix.dependencies }} dependencies and composer ${{ matrix.composer_versions }}"

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        php-versions: ["7.3", "7.4.2"]
        dependencies: ["highest", "lowest"]
        composer_versions: ["1.8.0", "1.9.0", "1.10.0-RC"]

    env:
      key: "continuous-integration-linux-v1" # change key (version) to clear cache
      extensions: "mbstring"
      ini-values: "date.timezone=Europe/Berlin, opcache.enable_cli=1, serialize_precision=14"
      tools: "composer, prestissimo"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: "Setup cache environment"
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: "Cache extensions"
        uses: actions/cache@v1
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: "Setup PHP"
        uses: shivammathur/setup-php@2.0.0
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          ini-values: ${{ env.ini-values }}
          tools: ${{ env.tools }}
          coverage: none

      - name: "Configure Container"
        env:
          NARROWSPARK_EMAIL: ${{ secrets.NARROWSPARK_EMAIL }}
          NARROWSPARK_USERNAME: ${{ secrets.NARROWSPARK_USERNAME }}
        run: |
          echo "::set-env name=PHPUNIT::./vendor/bin/phpunit --verbose"
          echo "::set-env name=COMPOSER_UP::composer update --no-progress --no-suggest --no-interaction --prefer-source --no-plugins --ansi"
          echo "::set-env name=SOURCE_NAME::${GITHUB_REF#refs/*/}"
          echo "::set-env name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}"
          echo "::set-env name=SOURCE_TAG::${GITHUB_REF#refs/tags/}"

          EMAIL=${NARROWSPARK_EMAIL:-"d.bannert@anolilab.de"}
          NAME=${NARROWSPARK_USERNAME:-"prisis"}

          git config --global user.email "${EMAIL}"
          git config --global user.name "${NAME}"

      - name: "Setup Problem Matchers for PHP"
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: "Check PHP Version"
        run: php -v

      - name: "List all php extensions with versions"
        run: php -r 'foreach (get_loaded_extensions() as $extension) echo $extension . " " . phpversion($extension) . PHP_EOL;'

      - name: "Setup Problem Matchers for PHPUnit"
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: "Self update global composer"
        run: sudo composer self-update ${{ matrix.composer_versions }}

      - name: "Check Composer Version"
        run: composer -V

      - name: "Validate composer.json and composer.lock"
        run: composer validate --strict

      - name: "Get Composer Cache Directory"
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: "Cache dependencies"
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: "Install highest dependencies"
        if: matrix.dependencies == 'highest'
        run: |
          sed -i 's#"composer/composer": "^1.8.0 || ^1.9.0"#"composer/composer": "^${{ matrix.composer_versions }}"#g' composer.json
          $COMPOSER_UP

      - name: "Install lowest dependencies"
        if: matrix.dependencies == 'lowest'
        run: |
          sed -i 's#"composer/composer": "^1.8.0 || ^1.9.0"#"composer/composer": "^${{ matrix.composer_versions }}"#g' composer.json
          $COMPOSER_UP --prefer-lowest --prefer-stable

      - name: "Narrowspark Automatic Test Suite"
        run: $PHPUNIT --testsuite="Narrowspark Automatic Test Suite"

      - name: "Narrowspark Automatic Common Test Suite"
        run: $PHPUNIT --testsuite="Narrowspark Automatic Common Test Suite"

      - name: "Narrowspark Automatic Prefetcher Test Suite"
        run: $PHPUNIT --testsuite="Narrowspark Automatic Prefetcher Test Suite"

      - name: "Narrowspark Automatic Security Test Suite"
        run: $PHPUNIT --testsuite="Narrowspark Automatic Security Test Suite"

      - name: "Narrowspark Automatic Internal Test Suite"
        run: $PHPUNIT --testsuite="Narrowspark Automatic Internal Test Suite"
